name: Scheduled Code Quality Checks

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch: # Allow manual triggering

jobs:
  code-health-check:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.17.1'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run comprehensive linting
      run: |
        echo "Running comprehensive code analysis..."
        npm run lint -- --format=unix --max-warnings=0 > full-lint-report.txt 2>&1 || true

    - name: Check dependency vulnerabilities
      run: |
        echo "Checking for security vulnerabilities..."
        npm audit --audit-level=moderate > security-report.txt 2>&1 || true

    - name: Check for outdated packages
      run: |
        echo "Checking for outdated dependencies..."
        npm outdated > outdated-report.txt 2>&1 || true

    - name: Generate health report
      run: |
        echo "## üè• Code Health Report - $(date +%Y-%m-%d)" > health-report.md
        echo "" >> health-report.md
        echo "### üìä Summary" >> health-report.md
        echo "- **Repository**: ${{ github.repository }}" >> health-report.md
        echo "- **Branch**: ${{ github.ref_name }}" >> health-report.md
        echo "- **Last Commit**: ${{ github.sha }}" >> health-report.md
        echo "" >> health-report.md

        echo "### üîç Linting Issues" >> health-report.md
        if [ -s "full-lint-report.txt" ]; then
          echo "```" >> health-report.md
          cat full-lint-report.txt >> health-report.md
          echo "```" >> health-report.md
        else
          echo "‚úÖ No linting issues found" >> health-report.md
        fi
        echo "" >> health-report.md

        echo "### üõ°Ô∏è Security Issues" >> health-report.md
        if [ -s "security-report.txt" ]; then
          echo "```" >> health-report.md
          cat security-report.txt >> health-report.md
          echo "```" >> health-report.md
        else
          echo "‚úÖ No security vulnerabilities found" >> health-report.md
        fi
        echo "" >> health-report.md

        echo "### üì¶ Dependency Status" >> health-report.md
        if [ -s "outdated-report.txt" ]; then
          echo "```" >> health-report.md
          cat outdated-report.txt >> health-report.md
          echo "```" >> health-report.md
        else
          echo "‚úÖ All dependencies are up to date" >> health-report.md
        fi

    - name: Upload health report
      uses: actions/upload-artifact@v4
      with:
        name: code-health-report
        path: health-report.md

    - name: Create issue if problems found
      uses: actions/github-script@v7
      if: failure()
      with:
        script: |
          const fs = require('fs');

          let hasIssues = false;
          let issueBody = '## üö® Code Health Issues Detected\n\n';

          // Check linting issues
          try {
            const lintReport = fs.readFileSync('full-lint-report.txt', 'utf8');
            if (lintReport.trim()) {
              hasIssues = true;
              issueBody += '### üîç Linting Issues\n```\n' + lintReport + '\n```\n\n';
            }
          } catch (e) {
            // File doesn't exist or can't be read
          }

          // Check security issues
          try {
            const securityReport = fs.readFileSync('security-report.txt', 'utf8');
            if (securityReport.trim()) {
              hasIssues = true;
              issueBody += '### üõ°Ô∏è Security Issues\n```\n' + securityReport + '\n```\n\n';
            }
          } catch (e) {
            // File doesn't exist or can't be read
          }

          if (hasIssues) {
            issueBody += '---\n*This issue was automatically created by the Code Health Check workflow*';

            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'üö® Code Health Issues Detected - ' + new Date().toISOString().split('T')[0],
              body: issueBody,
              labels: ['automated', 'code-quality', 'needs-attention']
            });
          }
